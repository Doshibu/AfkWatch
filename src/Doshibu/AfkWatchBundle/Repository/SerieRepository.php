<?php

namespace Doshibu\AfkWatchBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * SerieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SerieRepository extends \Doctrine\ORM\EntityRepository
{
	public function findMostPopular($limit=12, $asArray=false)
	{
		$qb = $this->createQueryBuilder('s')
			->orderBy('s.nbViews', 'DESC')
			->getQuery()
			->setMaxResults($limit);

		return ($asArray) ? $qb->getResult(Query::HYDRATE_ARRAY) : $qb->getResult();
	}

	public function findMostRated($limit=12, $asArray=false)
	{
		$qb = $this->createQueryBuilder('s')
			->orderBy('s.rating', 'DESC')
			->getQuery()
			->setMaxResults($limit);

		return ($asArray) ? $qb->getResult(Query::HYDRATE_ARRAY) : $qb->getResult();
	}

	public function findMostRecent($limit=12, $asArray=false)
	{
		$qb = $this->createQueryBuilder('s')
			->orderBy('s.addedAt', 'DESC')
			->getQuery()
			->setMaxResults($limit);

		return ($asArray) ? $qb->getResult(Query::HYDRATE_ARRAY) : $qb->getResult();
	}

	public function findMostPopularByGenre($slug, $limit=10, $asArray=false)
	{
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.genders', 'genres')
			->addSelect('genres')
			->where('genres.slug = :slug')
			->setParameter('slug', $slug)
			->orderBy('m.nbViews', 'DESC')
			->getQuery()
			->setMaxResults($limit);

		return ($asArray) ? $qb->getResult(Query::HYDRATE_ARRAY) : $qb->getResult();
	}

	public function findMostPopularByPays($slug, $limit=10, $asArray=false)
	{
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.countries', 'pays')
			->addSelect('pays')
			->where('pays.slug = :slug')
			->setParameter('slug', $slug)
			->orderBy('m.nbViews', 'DESC')
			->getQuery()
			->setMaxResults($limit);

		return ($asArray) ? $qb->getResult(Query::HYDRATE_ARRAY) : $qb->getResult();
	}
	
	public function findMostPopularByGenres($genres, $limit=10, $asArray=false)
	{
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.genders', 'genres')
			->addSelect('genres');

		$i=0;
		foreach($genres as $genre)
		{
			if($i=0)
			{
				$qb->where('genres.slug = :slug')
					->setParameter('slug', $genre->getSlug());
				++$i;
			}
			else
			{
				$qb->andWhere('genres.slug = :slug')
					->setParameter('slug', $genre->getSlug());
			}
		}

		$qb = $qb->orderBy('m.nbViews', 'DESC')->getQuery()->setMaxResults($limit);

		return ($asArray) ? $qb->getResult(Query::HYDRATE_ARRAY) : $qb->getResult();
	}
}
